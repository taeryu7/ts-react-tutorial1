리액트 컴포넌트 타입스크립트로 작성하기

프로젝트 생성
$ npx create-react-app ts-react-tutorial --typescript
↑ 위와 같이 뒤에 --typescript 가 있으면 타입스크립트 설정이 적용된 프로젝트가 생성된다는데 난 안됨.

↓이미 만든 프로젝트에 타입스크립트를 적용하고 싶으시다면 아래링크 참고
https://create-react-app.dev/docs/adding-typescript/

프로젝트를 열어보시면 src 디렉터리 안에 App.tsx 라는 파일이 있을거라는데 난 없다. 파악해봐야할듯.
찾아보니 typescript를 지원하는 명령어가 바뀌었다.
$ npx create-react-app ts-react-tutorial --template typescript
↑ 이걸로 tsx 파일을 만들어야한다. 무조건 명심할것.


이 컴포넌트 안에는 const App: React.FC = () => { ... } 와 같이 화살표함수를 사용하여 컴포넌트가 선언되어있다.
지금까지 다뤄왔던 컴포넌트들은 function 키워드를 사용해서 선언했는데 컴포넌트를 선언할때 화살표 함수를 사용해서 선언해도 무방하다.

여기서는 React.fc를 사용하는데 다른 개발자들은 잘 사용하지 않을뿐더러 구글링을 통하니 장점보다는 단점이 많은 기능으로보인다.
그냥 이런 기능도 있다. 정도로만 참고하는 용도로 공부하는게 좋을것 같다.

React.FC 를 사용 할 때는 props 의 타입을 Generics 로 넣어서 사용한다. 이렇게 React.FC를 사용해서 얻을 수 있는 이점은 두가지가 있다.
1. props 에 기본적으로 children 이 들어가있다.
2. 컴포넌트의 defaultProps, propTypes, contextTypes 를 설정 할 때 자동완성이 될 수 있다.

children 이 옵셔널 형태로 들어가있다보니까 어찌 보면 컴포넌트의 props 의 타입이 명백하지 않다. 
예를 들어 어떤 컴포넌트는 children이 무조건 있어야 하는 경우도 있을 것이고, 어떤 컴포넌트는 children 이 들어가면 안되는 경우도 있다.
React.FC 를 사용하면 기본적으로는 이에 대한 처리를 제대로 못하게 된다. 하고 싶다면 결국 Props 타입 안에 children 을 설정해야 한다.
↓ 아래 예시를 통해서 설명하자면
type GreetingsProps = {
  name: string;
  children: React.ReactNode;
};
React.FC는 (아직까지는) defaultProps 가 제대로 작동하지 않는다.

↓아래처럼 코드를 작성했다고 가정해보자. src/Greetings.tsx
import React from 'react';

type GreetingsProps = {
  name: string;
  mark: string;
};

const Greetings: React.FC<GreetingsProps> = ({ name, mark }) => (
  <div>
    Hello, {name} {mark}
  </div>
);

Greetings.defaultProps = {
  mark: '!'
};

export default Greetings;
↑ 위의 코드를
↓ 아래의 app에서 해당 컴포넌트를 렌더링해보자.

import React from 'react';
import Greetings from './Greetings';

const App: React.FC = () => {
  return <Greetings name="Hello" />;
};

export default App;

mark 를 defaultProps 로 넣었음에도 불구하고 mark값이 없다면서 제대로 작동하지 않는다. 반면 React.FC 를 생략하면 아주 잘 된다.

이러한 이슈들로 인해서 쓰지말라는 팁도 존재한다
React.FC 를 쓰지 말라는 팁 → https://medium.com/@martin_hotell/10-typescript-pro-tips-patterns-with-or-without-react-5799488d6680#78b9
(다른 쓰는 포럼들을 보니 내 정신건강을 위해서 진짜 안쓰는게 좋을것같다.....)

src/Greetings.tsx
import React from 'react';
type GreetingsProps = {
  name: string;
  mark: string;
};

function Greetings({ name, mark }: GreetingsProps) {
  return (
    <div>
      Hello, {name} {mark}
    </div>
  );
}

Greetings.defaultProps = {
  mark: '!'
};

export default Greetings;
↑ 위에는 화살표 함수를 사용을 안한 형태의 파일이다.

